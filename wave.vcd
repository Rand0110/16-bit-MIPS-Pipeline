$date
	Sat May 10 14:41:54 2025
$end

$version
	Synopsys VCS version U-2023.03-SP1_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 eae70af68a623a83 $end


$scope module mips_pipeline_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var integer 32 # i $end
$var integer 32 $ cycle $end
$var wire 16 % instr [15:0] $end
$var wire 16 & if_id_instr [15:0] $end
$var wire 16 ' id_ex_reg_data1 [15:0] $end
$var wire 16 ( ex_mem_alu_result [15:0] $end
$var wire 16 ) write_back_data [15:0] $end

$scope module dut $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 16 % instr [15:0] $end
$var wire 16 & if_id_instr [15:0] $end
$var wire 16 ' id_ex_reg_data1 [15:0] $end
$var wire 16 ( ex_mem_alu_result [15:0] $end
$var wire 16 ) write_back_data [15:0] $end
$var wire 1 , stall $end
$var reg 16 - pc [15:0] $end
$var reg 16 . if_id_instr_reg [15:0] $end
$var wire 6 / opcode [5:0] $end
$var wire 4 0 rs [3:0] $end
$var wire 4 1 rt [3:0] $end
$var wire 4 2 rd [3:0] $end
$var wire 1 3 zero_extend $end
$var wire 16 4 imm_ext [15:0] $end
$var wire 16 5 branch_offset [15:0] $end
$var wire 16 6 branch_target [15:0] $end
$var wire 16 7 jump_target [15:0] $end
$var wire 1 8 is_branch $end
$var wire 1 9 is_bne $end
$var wire 1 : is_jump $end
$var wire 1 ; is_jal $end
$var wire 1 < is_jr $end
$var wire 1 = is_halt $end
$var wire 1 > is_i_type $end
$var wire 16 ? reg_data1 [15:0] $end
$var wire 16 @ reg_data2 [15:0] $end
$var wire 1 A branch_taken $end
$var wire 16 B jr_target [15:0] $end
$var wire 16 C pc_plus1 [15:0] $end
$var wire 16 D pc_next [15:0] $end
$var wire 16 E fetched_instr [15:0] $end
$var wire 1 F reg_write_wb $end
$var wire 4 G mem_wb_rd [3:0] $end
$var wire 16 H jal_link [15:0] $end
$var wire 1 I is_r_type $end
$var wire 4 J wb_dest [3:0] $end
$var wire 4 K dest_reg [3:0] $end
$var wire 1 L reg_write $end
$var wire 1 M alu_src $end
$var wire 1 N mem_read $end
$var wire 1 O mem_write $end
$var wire 1 P mem_to_reg $end
$var wire 3 Q alu_control [2:0] $end
$var wire 1 R id_ex_mem_read $end
$var wire 4 S id_ex_rt [3:0] $end
$var wire 16 T id_ex_reg_data2 [15:0] $end
$var wire 16 U id_ex_sign_ext [15:0] $end
$var wire 3 V id_ex_alu_control [2:0] $end
$var wire 1 W id_ex_reg_write $end
$var wire 1 X id_ex_mem_write $end
$var wire 1 Y id_ex_mem_to_reg $end
$var wire 1 Z id_ex_alu_src $end
$var wire 4 [ id_ex_rs [3:0] $end
$var wire 4 \ id_ex_rd [3:0] $end
$var wire 2 ] forward_a [1:0] $end
$var wire 2 ^ forward_b [1:0] $end
$var wire 1 _ mem_wb_reg_write $end
$var wire 4 ` ex_mem_rd [3:0] $end
$var wire 1 a ex_mem_reg_write $end
$var wire 16 b alu_result [15:0] $end
$var wire 16 c forwarded_a [15:0] $end
$var wire 16 d forwarded_b [15:0] $end
$var wire 16 e alu_in2 [15:0] $end
$var wire 16 f ex_mem_reg_data2 [15:0] $end
$var wire 1 g ex_mem_mem_read $end
$var wire 1 h ex_mem_mem_write $end
$var wire 1 i ex_mem_mem_to_reg $end
$var reg 16 j mem_read_data [15:0] $end
$var wire 16 k mem_wb_read_data [15:0] $end
$var wire 16 l mem_wb_alu_result [15:0] $end
$var wire 1 m mem_wb_mem_to_reg $end

$scope module imem $end
$var wire 16 n addr [15:0] $end
$var wire 16 E instr [15:0] $end

$scope begin unnamed$$_0 $end
$var integer 32 o i $end
$upscope $end

$upscope $end


$scope module rf $end
$var wire 1 * clk $end
$var wire 1 F reg_write $end
$var wire 4 0 rs [3:0] $end
$var wire 4 1 rt [3:0] $end
$var wire 4 G rd [3:0] $end
$var wire 16 ) write_data [15:0] $end
$var wire 16 ? read_data1 [15:0] $end
$var wire 16 @ read_data2 [15:0] $end
$var integer 32 p i $end

$scope task print_registers $end
$var integer 32 q i $end
$upscope $end

$upscope $end


$scope module cu $end
$var wire 6 r opcode [5:0] $end
$var wire 4 2 funct [3:0] $end
$var reg 1 s reg_write $end
$var reg 1 t alu_src $end
$var reg 1 u mem_read $end
$var reg 1 v mem_write $end
$var reg 1 w mem_to_reg $end
$var reg 3 x alu_control [2:0] $end
$upscope $end


$scope module hdu $end
$var wire 4 y id_rs [3:0] $end
$var wire 4 z id_rt [3:0] $end
$var wire 4 S ex_rt [3:0] $end
$var wire 1 R ex_mem_read $end
$var reg 1 { stall $end
$upscope $end


$scope module id_ex $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 16 ? reg_data1_in [15:0] $end
$var wire 16 @ reg_data2_in [15:0] $end
$var wire 16 4 sign_ext_in [15:0] $end
$var wire 4 0 rs_in [3:0] $end
$var wire 4 1 rt_in [3:0] $end
$var wire 4 J rd_in [3:0] $end
$var wire 3 Q alu_control_in [2:0] $end
$var wire 1 L reg_write_in $end
$var wire 1 N mem_read_in $end
$var wire 1 O mem_write_in $end
$var wire 1 P mem_to_reg_in $end
$var wire 1 M alu_src_in $end
$var reg 16 | reg_data1_out [15:0] $end
$var reg 16 } reg_data2_out [15:0] $end
$var reg 16 ~ sign_ext_out [15:0] $end
$var reg 4 "! rs_out [3:0] $end
$var reg 4 "" rt_out [3:0] $end
$var reg 4 "# rd_out [3:0] $end
$var reg 3 "$ alu_control_out [2:0] $end
$var reg 1 "% reg_write_out $end
$var reg 1 "& mem_read_out $end
$var reg 1 "' mem_write_out $end
$var reg 1 "( mem_to_reg_out $end
$var reg 1 ") alu_src_out $end
$var reg 4 "* temp_rd [3:0] $end
$upscope $end


$scope module fwd $end
$var wire 4 [ id_ex_rs [3:0] $end
$var wire 4 S id_ex_rt [3:0] $end
$var wire 4 ` ex_mem_rd [3:0] $end
$var wire 4 G mem_wb_rd [3:0] $end
$var wire 1 a ex_mem_reg_write $end
$var wire 1 _ mem_wb_reg_write $end
$var reg 2 "+ forward_a [1:0] $end
$var reg 2 ", forward_b [1:0] $end
$upscope $end


$scope module alu_unit $end
$var wire 16 c in1 [15:0] $end
$var wire 16 e in2 [15:0] $end
$var wire 3 V alu_control [2:0] $end
$var reg 16 "- result [15:0] $end
$var wire 1 ". zero $end
$upscope $end


$scope module ex_mem $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 16 b alu_result_in [15:0] $end
$var wire 16 d reg_data2_in [15:0] $end
$var wire 4 \ rd_in [3:0] $end
$var wire 1 W reg_write_in $end
$var wire 1 R mem_read_in $end
$var wire 1 X mem_write_in $end
$var wire 1 Y mem_to_reg_in $end
$var reg 16 "/ alu_result_out [15:0] $end
$var reg 16 "0 reg_data2_out [15:0] $end
$var reg 4 "1 rd_out [3:0] $end
$var reg 1 "2 reg_write_out $end
$var reg 1 "3 mem_read_out $end
$var reg 1 "4 mem_write_out $end
$var reg 1 "5 mem_to_reg_out $end
$upscope $end


$scope module mem_wb $end
$var wire 1 * clk $end
$var wire 1 + reset $end
$var wire 16 "6 read_data_in [15:0] $end
$var wire 16 ( alu_result_in [15:0] $end
$var wire 4 ` rd_in [3:0] $end
$var wire 1 a reg_write_in $end
$var wire 1 i mem_to_reg_in $end
$var reg 16 "7 read_data_out [15:0] $end
$var reg 16 "8 alu_result_out [15:0] $end
$var reg 4 "9 rd_out [3:0] $end
$var reg 1 ": reg_write_out $end
$var reg 1 "; mem_to_reg_out $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0M
0")
0A
0!
0t
0u
0w
0v
1s
1+
0"3
0"5
0"4
0"2
0g
0i
0h
0a
0{
0Z
0R
0Y
0X
0W
09
08
0=
0>
0;
0<
0:
1I
0N
0"&
0P
0"(
0";
0":
0m
z_
0O
0"'
1L
0"%
0F
1"
0,
1".
03
b0000000000000000 n
b000 Q
b000 "$
b0000000000000000 e
b0000000000000000 b
b0000000000000000 "/
b0000000000000000 5
b0000000000000001 6
b000 x
b00000000000000000000000000000000 $
b0000 K
b00000000000000000000000000010000 p
b0000 "1
b0000000000000000 "0
b0000000000000000 (
b0000 `
b0000000000000000 f
b0011110011001111 E
b00 ]
b00 ^
b0000000000000000 c
b0000000000000000 d
b00 "+
b00 ",
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
b000 V
b0000 \
b0000000000000000 '
b0000000000000000 T
b0000 [
b0000 S
b0000000000000000 U
b0000000000000000 &
b0000000000000000 .
b0000000000000000 4
b0011110011001111 %
b0000000000000001 H
b0000000000000000 B
b0000000000000000 7
bxxxxxxxxxxxxxxxx j
b0000000000000000 "8
b0000 "9
b0000000000000000 l
b0000 G
b0000000000000000 k
b0000000000000000 -
b0000000000000001 D
b0000000000000001 C
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx q
b0000 2
b0000 "#
bxxxxxxxxxxxxxxxx "6
b0000000000000000 "7
b0000000000000000 ?
b0000000000000000 |
b0000000000000000 @
b0000000000000000 }
b0000000000000000 "-
b0000 "!
b0000 ""
b0000000000000000 ~
bxxxxxx /
bxxxx 0
bxxxx 1
bxxxxxx r
bxxxx y
bxxxx z
bxxxx "*
b00000000000000000000000100000000 o
b0000 J
b0000000000000000 )
0*
$end
b000000 /
b0000 0
b0000 1
b000000 r
b0000 y
b0000 z
#5000
1!
1*
#10000
0"
0+
0!
0*
#15000
1!
1*
b00000000000000000000000000000001 $
b0000 "*
b0000000000000001 -
b0000000000000001 n
b0011000110001111 E
b0011000110001111 %
b0000000000000010 C
b0000000000000010 H
b0000000000000010 6
b0011110011001111 .
b001111 /
b0011 0
b0011 1
b001111 r
b0011 y
b0011 z
0I
b0011110011001111 &
b0000000011001111 7
b1111 2
1"%
1W
bxxxxxxxxxxxxxxxx "7
bxxxxxxxxxxxxxxxx k
b0000000000000010 D
b110 x
b110 Q
1t
1M
1>
b1111111111001111 4
b1111111111001111 5
b1111111111010001 6
b0011 J
b0011 K
#20000
0!
0*
#25000
1!
1*
b00000000000000000000000000000010 $
b0011 "*
b0000000000000010 -
b0000000000000010 n
b0011010110001111 E
b0011010110001111 %
b0000000000000011 C
b0000000000000011 H
b1111111111010010 6
b0011000110001111 .
b001100 /
b0110 0
b001100 r
b0110 y
b0011000110001111 &
b0000000110001111 7
b1111111111001111 ~
b1111111111001111 U
b0011 "!
b0011 [
b0011 ""
b0011 S
b0011 "#
b0011 \
b110 "$
b110 V
1")
1Z
1"2
1a
b0000000000000011 D
b100 x
b100 Q
13
b0000000010001111 4
b0000000010001111 5
b0000000010010010 6
b1111111111001111 e
b1100111100000000 "-
b1100111100000000 b
0".
#30000
0!
0*
#35000
1!
1*
b00000000000000000000000000000011 $
b0000000000000011 -
b0000000000000011 n
b0000000110100110 E
b0000000110100110 %
b0000000000000100 C
b0000000000000100 H
b0000000010010011 6
b0011010110001111 .
b001101 /
b001101 r
b0011010110001111 &
b0000000010001111 ~
b0000000010001111 U
b0110 "!
b0110 [
b100 "$
b100 V
b1100111100000000 "/
b1100111100000000 (
b0011 "1
b0011 `
1":
1F
b0000000000000100 D
b101 x
b101 Q
b0000000010001111 e
b10 ",
b10 ^
b0000000000000001 "-
b0000000000000001 b
b1100111100000000 d
#40000
0!
0*
#45000
1!
1*
b00000000000000000000000000000100 $
b0000000000000100 -
b0000000000000100 n
b0001010001000100 E
b0001010001000100 %
b0000000000000101 C
b0000000000000101 H
b0000000010010100 6
b0000000110100110 .
b000000 /
b1001 1
b000000 r
b1001 z
1I
b0000000110100110 &
b0000000110100110 7
b0110 2
b101 "$
b101 V
b0000000000000001 "/
b0000000000000001 (
b1100111100000000 "0
b1100111100000000 f
b1100111100000000 "8
b1100111100000000 l
b0011 "9
b0011 G
b0000000000000101 D
b111 x
b111 Q
0t
0M
b1001 J
b1001 K
0>
03
b1111111110100110 4
b1111111110100110 5
b1111111110101011 6
b0000000000000000 "-
b0000000000000000 b
1".
b0000000000000001 d
b1100111100000000 )
b0110 J
b0110 K
#50000
0!
0*
#55000
1!
1*
b00000000000000000000000000000101 $
b0110 "*
b0000000000000101 -
b0000000000000101 n
b1000110001000010 E
b1000110001000010 %
b0000000000000110 C
b0000000000000110 H
b1111111110101100 6
b0001010001000100 .
b000101 /
b0001 0
b0001 1
b000101 r
b0001 y
b0001 z
19
0I
b0001010001000100 &
b0000000001000100 7
b0100 2
b1111111110100110 ~
b1111111110100110 U
b1001 ""
b1001 S
b0110 "#
b0110 \
b111 "$
b111 V
0")
0Z
b0000000000000000 "/
b0000000000000000 (
b0000000000000001 "0
b0000000000000001 f
b0000000000000001 "8
b0000000000000001 l
b0000000000000110 D
b001 x
b001 Q
0s
0L
1>
b0001 J
b0001 K
b0000000001000100 4
b0000000001000100 5
b0000000001001010 6
b0000000000000001 e
b00 ",
b00 ^
b0000000000000000 d
b0000000000000001 )
b0000000000000000 e
#60000
0!
0*
#65000
1!
1*
b00000000000000000000000000000110 $
b0001 "*
b0000000000000110 -
b0000000000000110 n
b0001010010001010 E
b0001010010001010 %
b0000000000000111 C
b0000000000000111 H
b0000000001001011 6
b1000110001000010 .
b100011 /
b0000 1
b100011 r
b0000 z
09
b1000110001000010 &
b0000000001000010 7
b0010 2
b0000000001000100 ~
b0000000001000100 U
b0001 "!
b0001 [
b0001 ""
b0001 S
b0001 "#
b0001 \
b001 "$
b001 V
0"%
0W
b0000000000000000 "0
b0000000000000000 f
b0110 "1
b0110 `
b0000000000000000 "8
b0000000000000000 l
b0000000000000111 D
b000 x
b000 Q
1w
1P
1u
1N
1t
1M
1s
1L
b0000 J
b0000 K
0>
b0000000001000010 4
b0000000001000010 5
b0000000001001001 6
b0000000000000000 )
#70000
0!
0*
#75000
1!
1*
b00000000000000000000000000000111 $
b0000 "*
b0000000000000111 -
b0000000000000111 n
b0001010011001011 E
b0001010011001011 %
b0000000000001000 C
b0000000000001000 H
b0000000001001010 6
b0001010010001010 .
b000101 /
b0010 0
b0010 1
b000101 r
b0010 y
b0010 z
19
b0001010010001010 &
b0000000010001010 7
b1010 2
b0000000001000010 ~
b0000000001000010 U
b0000 ""
b0000 S
b0000 "#
b0000 \
b000 "$
b000 V
1"%
1W
1"&
1R
1"(
1Y
1")
1Z
b0001 "1
b0001 `
0"2
0a
b0110 "9
b0110 G
b0000000000001000 D
b001 x
b001 Q
0w
0P
0u
0N
0t
0M
0s
0L
1>
b1111111110001010 4
b1111111110001010 5
b1111111110010010 6
b0000000001000010 e
b0010 J
b0010 K
b0000000001000010 "-
b0000000001000010 b
0".
#80000
0!
0*
#85000
1!
1*
b00000000000000000000000000001000 $
b0010 "*
b0000000000001000 -
b0000000000001000 n
b0001010010000001 E
b0001010010000001 %
b0000000000001001 C
b0000000000001001 H
b1111111110010011 6
b0001010011001011 .
b0011 0
b0011 y
b0001010011001011 &
b0000000011001011 7
b1011 2
b1111111110001010 ~
b1111111110001010 U
b0010 "!
b0010 [
b0010 ""
b0010 S
b0010 "#
b0010 \
b001 "$
b001 V
0"%
0W
0"&
0R
0"(
0Y
0")
0Z
b0000000001000010 "/
b0000000001000010 (
b0000 "1
b0000 `
1"2
1a
1"3
1g
1"5
1i
b0001 "9
b0001 G
0":
0F
b0000000000001001 D
b1111111111001011 4
b1111111111001011 5
b1111111111010100 6
b0000000000000000 e
b0000000000000000 "-
b0000000000000000 b
1".
#90000
0!
0*
#95000
1!
1*
b00000000000000000000000000001001 $
b0000000000001001 -
b0000000000001001 n
b0011110000001111 E
b0011110000001111 %
b0000000000001010 C
b0000000000001010 H
b1111111111010101 6
b0001010010000001 .
b0010 0
b0000 1
b0010 y
b0000 z
b0001010010000001 &
b0000000010000001 7
b0001 2
b1111111111001011 ~
b1111111111001011 U
b0011 "!
b0011 [
b0000000000000000 "/
b0000000000000000 (
b0010 "1
b0010 `
0"2
0a
0"3
0g
0"5
0i
b0000000001000010 "8
b0000000001000010 l
b0000 "9
b0000 G
1":
1F
1";
1m
b0000000000001010 D
b0000 J
b0000 K
b1111111110000001 4
b1111111110000001 5
b1111111110001011 6
bxxxxxxxxxxxxxxxx )
#100000
0!
0*
#105000
1!
1*
b00000000000000000000000000001010 $
b0000 "*
b0000000000001010 -
b0000000000001010 n
b0001010100111111 E
b0001010100111111 %
b0000000000001011 C
b0000000000001011 H
b1111111110001100 6
bxxxxxxxxxxxxxxxx @
b0011110000001111 .
b001111 /
b0000 0
b0011 1
b001111 r
b0000 y
b0011 z
bxxxxxxxxxxxxxxxx ?
bxxxxxxxxxxxxxxxx B
b0000000000000000 @
09
b0011110000001111 &
b0000000000001111 7
b1111 2
b1111111110000001 ~
b1111111110000001 U
b0010 "!
b0010 [
b0000 ""
b0000 S
b0000 "#
b0000 \
b0000000000000000 "8
b0000000000000000 l
b0010 "9
b0010 G
0":
0F
0";
0m
b0000000000001011 D
0A
b110 x
b110 Q
1t
1M
1s
1L
b0011 J
b0011 K
b0000000000001111 4
b0000000000001111 5
b0000000000011010 6
b0000000000000000 )
#110000
0!
0*
#115000
1!
1*
b00000000000000000000000000001011 $
b0011 "*
b0000000000001011 -
b0000000000001011 n
b0000000100100101 E
b0000000100100101 %
b0000000000001100 C
b0000000000001100 H
b0000000000011011 6
b0001010100111111 .
b000101 /
b0100 0
b1111 1
b000101 r
b0100 y
b1111 z
b0000000000000000 ?
b0000000000000000 B
19
b0001010100111111 &
b0000000100111111 7
bxxxxxxxxxxxxxxxx |
bxxxxxxxxxxxxxxxx '
b0000000000001111 ~
b0000000000001111 U
b0000 "!
b0000 [
b0011 ""
b0011 S
b0011 "#
b0011 \
b110 "$
b110 V
1"%
1W
1")
1Z
b0000 "1
b0000 `
b0000000000001100 D
b001 x
b001 Q
0t
0M
0s
0L
b1111 J
b1111 K
b0000000000111111 4
b0000000000111111 5
b0000000001001011 6
bxxxxxxxxxxxxxxxx c
b0000000000001111 e
b0000111100000000 "-
b0000111100000000 b
0".
#120000
0!
0*
#125000
1!
1*
b00000000000000000000000000001100 $
b1111 "*
b0000000000001100 -
b0000000000001100 n
b0001010110000100 E
b0001010110000100 %
b0000000000001101 C
b0000000000001101 H
b0000000001001100 6
b0000000100100101 .
b000000 /
b1001 1
b000000 r
b1001 z
09
1I
b0000000100100101 &
b0000000100100101 7
b0101 2
b0000000000000000 |
b0000000000000000 '
b0000000000111111 ~
b0000000000111111 U
b0100 "!
b0100 [
b1111 ""
b1111 S
b1111 "#
b1111 \
b001 "$
b001 V
0"%
0W
0")
0Z
b0000111100000000 "/
b0000111100000000 (
b0011 "1
b0011 `
1"2
1a
b0000 "9
b0000 G
b0000000000001101 D
b000 x
b000 Q
1s
1L
b1001 J
b1001 K
0>
b0000000000100101 4
b0000000000100101 5
b0000000000110010 6
b0000000000000000 c
b0000000000000000 e
b0000000000000000 "-
b0000000000000000 b
1".
b0101 J
b0101 K
#130000
0!
0*
#135000
1!
1*
b00000000000000000000000000001101 $
b0101 "*
b0000000000001101 -
b0000000000001101 n
b0001010010001010 E
b0001010010001010 %
b0000000000001110 C
b0000000000001110 H
b0000000000110011 6
b0001010110000100 .
b000101 /
b0110 0
b0001 1
b000101 r
b0110 y
b0001 z
19
0I
b0001010110000100 &
b0000000110000100 7
b0100 2
b0000000000100101 ~
b0000000000100101 U
b1001 ""
b1001 S
b0101 "#
b0101 \
b000 "$
b000 V
1"%
1W
b0000000000000000 "/
b0000000000000000 (
b1111 "1
b1111 `
0"2
0a
b0000111100000000 "8
b0000111100000000 l
b0011 "9
b0011 G
1":
1F
b0000000000001110 D
b001 x
b001 Q
0s
0L
1>
b0001 J
b0001 K
b1111111110000100 4
b1111111110000100 5
b1111111110010010 6
b0000111100000000 )
#140000
0!
0*
#145000
1!
1*
b00000000000000000000000000001110 $
b0001 "*
b0000000000001110 -
b0000000000001110 n
b0010100100000110 E
b0010100100000110 %
b0000000000001111 C
b0000000000001111 H
b1111111110010011 6
b0001010010001010 .
b0010 0
b0010 1
b0010 y
b0010 z
b0001010010001010 &
b0000000010001010 7
b1010 2
b1111111110000100 ~
b1111111110000100 U
b0110 "!
b0110 [
b0001 ""
b0001 S
b0001 "#
b0001 \
b001 "$
b001 V
0"%
0W
b0101 "1
b0101 `
1"2
1a
b0000000000000000 "8
b0000000000000000 l
b1111 "9
b1111 G
0":
0F
b0000000000001111 D
b0010 J
b0010 K
b1111111110001010 4
b1111111110001010 5
b1111111110011001 6
b0000000000000000 )
#150000
0!
0*
#155000
1!
1*
b00000000000000000000000000001111 $
b0010 "*
b0000000000001111 -
b0000000000001111 n
b1111110000000000 E
b1111110000000000 %
b0000000000010000 C
b0000000000010000 H
b1111111110011010 6
b0010100100000110 .
b001010 /
b0100 0
b0001 1
b001010 r
b0100 y
b0001 z
09
b0010100100000110 &
b0000000100000110 7
b0110 2
b1111111110001010 ~
b1111111110001010 U
b0010 "!
b0010 [
b0010 ""
b0010 S
b0010 "#
b0010 \
b0001 "1
b0001 `
0"2
0a
b0101 "9
b0101 G
1":
1F
b0000000000010000 D
b111 x
b111 Q
1t
1M
1s
1L
b0001 J
b0001 K
13
b0000000000000110 4
b0000000000000110 5
b0000000000010110 6
#160000
0!
0*
#165000
1!
1*
b00000000000000000000000000010000 $
b0001 "*
b0000000000010000 -
b0000000000010000 n
b0000000000000000 E
b0000000000000000 %
b0000000000010001 C
b0000000000010001 H
b0000000000010111 6
b1111110000000000 .
b111111 /
b0000 0
b0000 1
b111111 r
b0000 y
b0000 z
bxxxxxxxxxxxxxxxx ?
bxxxxxxxxxxxxxxxx B
bxxxxxxxxxxxxxxxx @
1=
b1111110000000000 &
b0000000000000000 7
b0000 2
b0000000000000110 ~
b0000000000000110 U
b0100 "!
b0100 [
b0001 ""
b0001 S
b0001 "#
b0001 \
b111 "$
b111 V
1"%
1W
1")
1Z
b0010 "1
b0010 `
b0001 "9
b0001 G
0":
0F
b0000000000010000 D
b000 x
b000 Q
0t
0M
0s
0L
b0000 J
b0000 K
0>
03
b0000000000000000 4
b0000000000000000 5
b0000000000010001 6
b0000000000000110 e
#170000
0!
0*
#175000
1!
1*
b00000000000000000000000000010001 $
b00000000000000000000000000000000 q
b00000000000000000000000000010000 q
